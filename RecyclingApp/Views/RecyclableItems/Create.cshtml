@model RecyclingApp.Models.RecyclableItem

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>RecyclableItem</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.RecyclableTypeId, "Recyclable Type", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("RecyclableTypeId", (SelectList)ViewBag.RecyclableTypeId, htmlAttributes: new { @class = "form-control", id = "recyclableTypeId" })
            @Html.ValidationMessageFor(model => model.RecyclableTypeId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Weight, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control", id = "weight" } })
            @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ItemDescription, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ItemDescription, new { htmlAttributes = new { @class = "form-control", maxlength = "150" } })
            @Html.ValidationMessageFor(model => model.ItemDescription, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ComputedRate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <span id="computedRate">@Html.DisplayFor(model => model.ComputedRate)</span>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const recyclableTypeId = document.getElementById('recyclableTypeId');
        const weight = document.getElementById('weight');
        const computedRateSpan = document.getElementById('computedRate');

        function updateComputedRate() {
            const weightValue = parseFloat(weight.value) || 0;
            const typeId = parseInt(recyclableTypeId.value) || 0;

            fetch(`/RecyclableItems/GetRecyclableTypeRate/${typeId}`)
                .then(response => response.json())
                .then(data => {
                    const rate = data.rate || 0;
                    const computedRate = rate * weightValue;
                    computedRateSpan.textContent = computedRate.toFixed(2);
                })
                .catch(error => console.error('Error fetching rate:', error));
        }

        weight.addEventListener('input', updateComputedRate);
        recyclableTypeId.addEventListener('change', updateComputedRate);
    });

</script>


